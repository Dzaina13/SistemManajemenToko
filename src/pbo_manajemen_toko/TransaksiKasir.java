/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pbo_manajemen_toko;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import javax.swing.JFrame;

/**
 *
 * @author nabil
 */
public class TransaksiKasir extends javax.swing.JFrame {
    private double subtotal = 0.0;
    private double total = 0.0;
    private int idUser;
    private DefaultTableModel tblModel;
    private int nomorUrut = 1;
  
    
    /**
     * Creates new form TransaksiKasir
     */
    public TransaksiKasir(int idUser) {
        initComponents();
        this.idUser = idUser;
        
        tblModel = (DefaultTableModel) ftbltransaksi.getModel();
        loadDiskon();
        
        // Set fullscreen
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        loadnama();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideBarPanel = new javax.swing.JPanel();
        logoTitleLabel = new javax.swing.JLabel();
        dashboardBtn = new javax.swing.JLabel();
        transaksiBtn = new javax.swing.JLabel();
        historiTransaksiBtn = new javax.swing.JLabel();
        returnBarangBtn = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JLabel();
        profileNameLabel = new javax.swing.JLabel();
        profileIcon = new javax.swing.JLabel();
        profileRoleLabel = new javax.swing.JLabel();
        listBarangBtn = new javax.swing.JLabel();
        returnBarangBtnIcon = new javax.swing.JLabel();
        transaksiBtnIcon = new javax.swing.JLabel();
        listBarangBtnIcon = new javax.swing.JLabel();
        dashboardBtnIcon = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();
        returnBarangIcon = new javax.swing.JLabel();
        mainContentPanel = new javax.swing.JPanel();
        mainTitleLabel = new javax.swing.JLabel();
        inputPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        ftotal2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        finput = new javax.swing.JTextField();
        fjumlah = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ftbltransaksi = new javax.swing.JTable();
        paymentPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        fdiskon = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        fpajak = new javax.swing.JTextField();
        fsubtotal1 = new javax.swing.JLabel();
        fsubtotal = new javax.swing.JLabel();
        ftotal1 = new javax.swing.JLabel();
        ftotal = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transaksi Kasir");
        setBackground(new java.awt.Color(250, 250, 250));

        sideBarPanel.setBackground(new java.awt.Color(237, 255, 249));
        sideBarPanel.setForeground(new java.awt.Color(237, 255, 249));

        logoTitleLabel.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        logoTitleLabel.setForeground(new java.awt.Color(50, 142, 110));
        logoTitleLabel.setText("TokoAja.");

        dashboardBtn.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        dashboardBtn.setForeground(new java.awt.Color(123, 122, 120));
        dashboardBtn.setText("Dashboard");
        dashboardBtn.setToolTipText("");
        dashboardBtn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        dashboardBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardBtnMouseClicked(evt);
            }
        });

        transaksiBtn.setFont(new java.awt.Font("Poppins Medium", 1, 14)); // NOI18N
        transaksiBtn.setForeground(new java.awt.Color(50, 142, 110));
        transaksiBtn.setText("Transaksi");
        transaksiBtn.setToolTipText("");
        transaksiBtn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        historiTransaksiBtn.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        historiTransaksiBtn.setForeground(new java.awt.Color(123, 122, 120));
        historiTransaksiBtn.setText("Histori Transaksi");
        historiTransaksiBtn.setToolTipText("");
        historiTransaksiBtn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        historiTransaksiBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        historiTransaksiBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historiTransaksiBtnMouseClicked(evt);
            }
        });

        returnBarangBtn.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        returnBarangBtn.setForeground(new java.awt.Color(123, 122, 120));
        returnBarangBtn.setText("Return Barang");
        returnBarangBtn.setToolTipText("");
        returnBarangBtn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        returnBarangBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnBarangBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnBarangBtnMouseClicked(evt);
            }
        });

        logoutBtn.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(123, 122, 120));
        logoutBtn.setText("Logout");
        logoutBtn.setToolTipText("");
        logoutBtn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        logoutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutBtnMouseClicked(evt);
            }
        });

        profileNameLabel.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        profileNameLabel.setText("Nabila");
        profileNameLabel.setToolTipText("");
        profileNameLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        profileIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/profile-img.png"))); // NOI18N

        profileRoleLabel.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        profileRoleLabel.setForeground(new java.awt.Color(123, 122, 120));
        profileRoleLabel.setText("Kasir");
        profileRoleLabel.setToolTipText("");
        profileRoleLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        listBarangBtn.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        listBarangBtn.setForeground(new java.awt.Color(123, 122, 120));
        listBarangBtn.setText("List Barang");
        listBarangBtn.setToolTipText("");
        listBarangBtn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        listBarangBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listBarangBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listBarangBtnMouseClicked(evt);
            }
        });

        returnBarangBtnIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/transaction-history-stroke-rounded 1.png"))); // NOI18N

        transaksiBtnIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pbo_manajemen_toko/icons/transaction.png"))); // NOI18N

        listBarangBtnIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/box-1.png"))); // NOI18N

        dashboardBtnIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/icons/Frame.png"))); // NOI18N

        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pbo_manajemen_toko/icons/logout.png"))); // NOI18N

        returnBarangIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pbo_manajemen_toko/icons/product-management.png"))); // NOI18N

        javax.swing.GroupLayout sideBarPanelLayout = new javax.swing.GroupLayout(sideBarPanel);
        sideBarPanel.setLayout(sideBarPanelLayout);
        sideBarPanelLayout.setHorizontalGroup(
            sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoTitleLabel)
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addComponent(profileIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profileNameLabel)
                            .addComponent(profileRoleLabel)))
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addComponent(logoutIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoutBtn))
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(returnBarangBtnIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(historiTransaksiBtn))
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addComponent(dashboardBtnIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dashboardBtn))
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addComponent(listBarangBtnIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listBarangBtn))
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addComponent(transaksiBtnIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(transaksiBtn))
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addComponent(returnBarangIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(returnBarangBtn)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        sideBarPanelLayout.setVerticalGroup(
            sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(logoTitleLabel)
                .addGap(24, 24, 24)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dashboardBtnIcon)
                    .addComponent(dashboardBtn))
                .addGap(26, 26, 26)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(listBarangBtn)
                    .addComponent(listBarangBtnIcon))
                .addGap(26, 26, 26)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(transaksiBtn)
                    .addComponent(transaksiBtnIcon))
                .addGap(26, 26, 26)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(returnBarangIcon)
                    .addComponent(returnBarangBtn))
                .addGap(26, 26, 26)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(returnBarangBtnIcon)
                    .addComponent(historiTransaksiBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(profileIcon)
                    .addGroup(sideBarPanelLayout.createSequentialGroup()
                        .addComponent(profileNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(profileRoleLabel)))
                .addGap(28, 28, 28)
                .addGroup(sideBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logoutBtn)
                    .addComponent(logoutIcon))
                .addGap(41, 41, 41))
        );

        mainContentPanel.setBackground(new java.awt.Color(250, 250, 250));
        mainContentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainTitleLabel.setFont(new java.awt.Font("Poppins SemiBold", 1, 24)); // NOI18N
        mainTitleLabel.setForeground(new java.awt.Color(50, 142, 110));
        mainTitleLabel.setText("Transaksi");
        mainContentPanel.add(mainTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 34, 250, 34));

        inputPanel.setBackground(new java.awt.Color(255, 255, 255));
        inputPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Poppins Medium", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(50, 142, 110));
        jLabel11.setText("Total");

        ftotal2.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        ftotal2.setText("Rp. 0");

        jButton1.setBackground(new java.awt.Color(50, 142, 110));
        jButton1.setFont(new java.awt.Font("Poppins Medium", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pbo_manajemen_toko/icons/add.png"))); // NOI18N
        jButton1.setText("Tambah Barang");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        finput.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        finput.setText("Masukkan id/nama barang");
        finput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                finputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                finputFocusLost(evt);
            }
        });

        fjumlah.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        fjumlah.setText("Jumlah");
        fjumlah.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fjumlahFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fjumlahFocusLost(evt);
            }
        });

        ftbltransaksi.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        ftbltransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "nama_item", "Id_item", "Jumlah", "Total"
            }
        ));
        jScrollPane1.setViewportView(ftbltransaksi);

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(finput, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(fjumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ftotal2)
                            .addComponent(jLabel11))))
                .addGap(20, 20, 20))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finput, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fjumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftotal2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainContentPanel.add(inputPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 90, 830, 380));

        paymentPanel.setBackground(new java.awt.Color(255, 255, 255));
        paymentPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel13.setText("Diskon");

        fdiskon.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        fdiskon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pilih" }));
        fdiskon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fdiskonActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel14.setText("Pajak (%)");

        fpajak.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        fpajak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpajakActionPerformed(evt);
            }
        });

        fsubtotal1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        fsubtotal1.setText("Sub Total");

        fsubtotal.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        fsubtotal.setText("Rp. 0");

        ftotal1.setFont(new java.awt.Font("Poppins Medium", 1, 14)); // NOI18N
        ftotal1.setForeground(new java.awt.Color(50, 142, 110));
        ftotal1.setText("Total");

        ftotal.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        ftotal.setForeground(new java.awt.Color(50, 142, 110));
        ftotal.setText("Rp. 0");

        jButton2.setBackground(new java.awt.Color(50, 142, 110));
        jButton2.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pbo_manajemen_toko/icons/shopping-cart.png"))); // NOI18N
        jButton2.setText("Bayar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentPanelLayout = new javax.swing.GroupLayout(paymentPanel);
        paymentPanel.setLayout(paymentPanelLayout);
        paymentPanelLayout.setHorizontalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fdiskon, 0, 120, Short.MAX_VALUE)
                    .addComponent(fpajak))
                .addGap(40, 40, 40)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fsubtotal1)
                    .addComponent(ftotal1))
                .addGap(40, 40, 40)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fsubtotal)
                    .addComponent(ftotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        paymentPanelLayout.setVerticalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(fdiskon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fsubtotal1)
                    .addComponent(fsubtotal))
                .addGap(18, 18, 18)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(fpajak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftotal1)
                    .addComponent(ftotal))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainContentPanel.add(paymentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 490, 830, 100));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sideBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dashboardBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardBtnMouseClicked
        DashboardKasir dsb = new DashboardKasir();
        dsb.setVisible(true);
        dispose();
    }//GEN-LAST:event_dashboardBtnMouseClicked

    private void returnBarangBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnBarangBtnMouseClicked
        ReturnBarang rtrB = new ReturnBarang();
        rtrB.setVisible(true);
        dispose();
    }//GEN-LAST:event_returnBarangBtnMouseClicked

    private void historiTransaksiBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historiTransaksiBtnMouseClicked
        HistoriKasir hst = new HistoriKasir();
        hst.setVisible(true);
        dispose();
    }//GEN-LAST:event_historiTransaksiBtnMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tambahBarang();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void finputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_finputFocusGained
        if (finput.getText().equals("Masukkan id/nama barang")) {
            finput.setText("");
        }
    }//GEN-LAST:event_finputFocusGained

    private void finputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_finputFocusLost
        if (finput.getText().isEmpty()) {
            finput.setText("Masukkan id/nama barang");
        }
    }//GEN-LAST:event_finputFocusLost

    private void fjumlahFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fjumlahFocusGained
        if (fjumlah.getText().equals("Jumlah")) {
            fjumlah.setText("");
        }
    }//GEN-LAST:event_fjumlahFocusGained

    private void fjumlahFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fjumlahFocusLost
        if (fjumlah.getText().isEmpty()) {
            fjumlah.setText("Jumlah");
        }
    }//GEN-LAST:event_fjumlahFocusLost

    private void fdiskonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fdiskonActionPerformed
        updateTotal();
    }//GEN-LAST:event_fdiskonActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        bayar();
    }//GEN-LAST:event_jButton2MouseClicked

    private void fpajakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpajakActionPerformed
        updateTotal();
    }//GEN-LAST:event_fpajakActionPerformed

    private void listBarangBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listBarangBtnMouseClicked
        ListBarang lstB = new ListBarang();
        lstB.setVisible(true);
        dispose();
    }//GEN-LAST:event_listBarangBtnMouseClicked

    private void logoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseClicked
        Login.Session.clearSession();
        Login login = new Login();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_logoutBtnMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void resetFormInput() {
        finput.setText("Masukkan id/nama barang");
        fjumlah.setText("Jumlah");
    }
    
    private void loadDiskon() {
        try {
            // query
            String query = "SELECT kode_diskon FROM diskon WHERE aktif = 1";
            
            // fungsi Koneksi
            java.sql.Connection Vconn = (Connection)Koneksi.konfigDB();
            
            // kirim parameter fungsi java ke sql
            java.sql.Statement s = Vconn.createStatement();
            
            // eksekusi query
            java.sql.ResultSet rs = s.executeQuery(query);
            
            // looping
            while (rs.next()) {
                fdiskon.addItem(rs.getString("kode_diskon"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void tambahBarang() {
        String keyword = finput.getText();
        int jumlah = Integer.parseInt(fjumlah.getText());
        try {
            java.sql.Connection Vconn = Koneksi.konfigDB();
            java.sql.PreparedStatement ps = Vconn.prepareStatement("SELECT * FROM items WHERE id_item=? OR nama_item LIKE ?");
            ps.setString(1, keyword);
            ps.setString(2, "%" + keyword + "%");
            java.sql.ResultSet rs = ps.executeQuery();
            
            if (rs.next()) {
                String idItem = rs.getString("id_item");
                String namaItem = rs.getString("nama_item");
                double harga = rs.getDouble("harga");
                int stok = rs.getInt("stok");
                
                //cek stok cukup 
                if (jumlah > stok) {
                    JOptionPane.showMessageDialog(this, "Stok untuk \"" + idItem + "\" tidak mencukupi.\nStok tersedia: " + stok, "Stok tidak cukup", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                
                double totalItem = harga * jumlah;
                subtotal += totalItem;
                updateTotal();
                
                
                Vector<Object> row = new Vector<>();
                row.add(nomorUrut++);
                row.add(namaItem);
                row.add(idItem);
                row.add(jumlah);
                row.add(totalItem);
                tblModel.addRow(row);
                
                resetFormInput();
                updateTotal();
            } else {
                JOptionPane.showMessageDialog(this, "item tidak ditemukan");
            }
        } catch (Exception e ) {
            e.printStackTrace();
        }
    }
    
    private void updateTotal() {
        try {
            double pajak = fpajak.getText().isEmpty() ? 0 : Double.parseDouble(fpajak.getText());
            String kodeDiskon = (String) fdiskon.getSelectedItem();
            
            double diskonValue = 0;
            try {
                java.sql.Connection Vconn = Koneksi.konfigDB();
                java.sql.PreparedStatement ps = Vconn.prepareStatement("SELECT * FROM diskon WHERE kode_diskon = ?");
                ps.setString(1, kodeDiskon);
                java.sql.ResultSet rs = ps.executeQuery();
                if(rs.next()) {
                    double nilai = rs.getDouble("nilai");
                    String tipe = rs.getString("tipe");
                    diskonValue = tipe.equalsIgnoreCase("persentase") ? subtotal * nilai / 100 : nilai;
                }
            } catch (Exception e) {
                
            }
            
            // setelah diskon
            double setelahDiskon = subtotal - diskonValue;
            
            // Hitung pajak dari nilai setelah diskon
            double pajakValue = setelahDiskon * pajak / 100;
            
            //total akhir
            double total = setelahDiskon + pajakValue;
                    
            fsubtotal.setText(String.format("Rp. %.0f", subtotal));
            ftotal.setText(String.format("Rp. %.0f", total));
            ftotal2.setText(String.format("Rp. %.0f", total));
        } catch (Exception e) {
            e.printStackTrace();
          
        }
    }
    
    private void bayar() {
    java.sql.Connection Vconn = null;
    try {
        Vconn = Koneksi.konfigDB();
        Vconn.setAutoCommit(false);

        // Hitung subtotal dari tabel
        double subtotal = 0.0;
        for (int i = 0; i < ftbltransaksi.getRowCount(); i++) {
            Object subTotalObj = ftbltransaksi.getValueAt(i, 4);
            if (subTotalObj != null) {
                subtotal += Double.parseDouble(subTotalObj.toString());
            }
        }

        // Ambil diskon
        String kodeDiskon = (String) fdiskon.getSelectedItem();
        Integer idDiskon = null;
        double diskonValue = 0.0;

        if (kodeDiskon != null && !kodeDiskon.isEmpty()) {
            try (java.sql.PreparedStatement psDiskon = Vconn.prepareStatement("SELECT id_diskon, tipe, nilai FROM diskon WHERE kode_diskon=?")) {
                psDiskon.setString(1, kodeDiskon);
                try (java.sql.ResultSet rsDiskon = psDiskon.executeQuery()) {
                    if (rsDiskon.next()) {
                        idDiskon = rsDiskon.getInt("id_diskon");
                        String tipe = rsDiskon.getString("tipe");
                        double nilai = rsDiskon.getDouble("nilai");

                        if ("persentase".equalsIgnoreCase(tipe)) {
                            diskonValue = subtotal * nilai / 100;
                        } else {
                            diskonValue = nilai;
                        }
                    }
                }
            }
        }

        // Ambil nilai pajak dari input
        double pajak = 0.0;
        try {
            pajak = Double.parseDouble(fpajak.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Nilai pajak tidak valid. Diset 0.");
        }

        // Hitung total
        double setelahDiskon = subtotal - diskonValue;
        double pajakValue = setelahDiskon * pajak / 100;
        total = setelahDiskon + pajakValue;

        // Debug
        System.out.println("Subtotal: " + subtotal);
        System.out.println("Diskon: " + diskonValue);
        System.out.println("Pajak: " + pajakValue);
        System.out.println("Total: " + total);

        // Simpan transaksi utama
        int idTransaksi = 0;
        try (java.sql.PreparedStatement ps = Vconn.prepareStatement(
                "INSERT INTO transactions (id_user, id_diskon, total_harga, tanggal) VALUES (?, ?, ?, NOW())",
                java.sql.PreparedStatement.RETURN_GENERATED_KEYS)) {

            ps.setInt(1, idUser);
            if (idDiskon == null) {
                ps.setNull(2, java.sql.Types.INTEGER);
            } else {
                ps.setInt(2, idDiskon);
            }
            ps.setDouble(3, total);
            ps.executeUpdate();

            try (java.sql.ResultSet rs = ps.getGeneratedKeys()) {
                if (rs.next()) {
                    idTransaksi = rs.getInt(1);
                } else {
                    throw new SQLException("Gagal mendapatkan ID Transaksi.");
                }
            }
        }

        // Simpan detail item transaksi dan kurangi stok
        for (int i = 0; i < ftbltransaksi.getRowCount(); i++) {
            Object idItemObj = ftbltransaksi.getValueAt(i, 2);
            Object jumlahObj = ftbltransaksi.getValueAt(i, 3);
            Object subTotalItemObj = ftbltransaksi.getValueAt(i, 4);

            if (idItemObj == null || jumlahObj == null || subTotalItemObj == null) {
                System.out.println("Baris " + i + " kosong, dilewati.");
                continue;
            }

            String idItem = idItemObj.toString();
            int jumlah = Integer.parseInt(jumlahObj.toString());
            double subTotalItem = Double.parseDouble(subTotalItemObj.toString());
            
            // simpan ke detail transaksi
            try (java.sql.PreparedStatement pDetail = Vconn.prepareStatement(
                    "INSERT INTO transaction_items (id_transaksi, id_item, jumlah, subtotal) VALUES (?, ?, ?, ?)")) {
                pDetail.setInt(1, idTransaksi);
                pDetail.setString(2, idItem);
                pDetail.setInt(3, jumlah);
                pDetail.setDouble(4, subTotalItem);
                pDetail.executeUpdate();
            }
            
            // kurangi stok barang
            try (java.sql.PreparedStatement pstStok = Vconn.prepareStatement("UPDATE items SET stok = stok - ? WHERE id_item = ?")) {
                pstStok.setInt(1, jumlah);
                pstStok.setString(2, idItem);
                pstStok.executeUpdate();
            }
        }

        Vconn.commit();
        
        // simpan histori transaksi
        String aktivitas = "Melakukan transaksi penjualan dengan ID transaksi " + idTransaksi;
        insertHistori(idUser, aktivitas);
    
        JOptionPane.showMessageDialog(this, "Transaksi berhasil disimpan.");
        resetForm();

    } catch (Exception e) {
        try {
            if (Vconn != null) {
                Vconn.rollback();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal simpan transaksi: " + e.getMessage());
    } finally {
        try {
            if (Vconn != null && !Vconn.isClosed()) {
                Vconn.setAutoCommit(true);
                Vconn.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    }

    private void insertHistori(int idUser, String aktivitas) {
        try (java.sql.Connection Vconn = Koneksi.konfigDB()) {
            String sql = "INSERT INTO history (id_user, aktivitas, waktu) VALUES (?, ?, NOW())";
            java.sql.PreparedStatement pst = Vconn.prepareStatement(sql);
            pst.setInt(1, idUser);
            pst.setString(2, aktivitas);
            pst.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan histori: " + e.getMessage());
        }
    }

    private void resetForm() {
        finput.setText("Masukkan id/nama barang");
        fjumlah.setText("Jumlah");
        fdiskon.setSelectedIndex(0);
        fpajak.setText("");
        
        DefaultTableModel tblModel = (DefaultTableModel) ftbltransaksi.getModel();
        tblModel.setRowCount(0);
        
        nomorUrut = 1;
        subtotal = 0;
        total = 0;
        updateTotal();
    }

    /**
     * Method untuk toggle fullscreen mode
     * @param fullscreen true untuk fullscreen, false untuk windowed
     */
    private void setFullScreenMode(boolean fullscreen) {
        if (fullscreen) {
            setExtendedState(JFrame.MAXIMIZED_BOTH);
        } else {
            setExtendedState(JFrame.NORMAL);
            setLocationRelativeTo(null); // Center the window
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaksiKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransaksiKasir(1).setVisible(true);
            }
        });
    }
    
    private void loadnama() {
                int idUser = Login.Session.getUserId();
                String nama = "";
                try {
                    java.sql.Connection Vconn = (Connection)Koneksi.konfigDB();
                    String sql = "SELECT nama FROM users WHERE id_user = ?";
                    java.sql.PreparedStatement s = Vconn.prepareStatement(sql);
                    s.setInt(1, idUser);
                    ResultSet rs = s.executeQuery();

                    if (rs.next()) {
                        nama = rs.getString("nama");
                    }

                    rs.close();
                    s.close();
                    Vconn.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                profileNameLabel.setText(""+nama+"");
            }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dashboardBtn;
    private javax.swing.JLabel dashboardBtnIcon;
    private javax.swing.JComboBox<String> fdiskon;
    private javax.swing.JTextField finput;
    private javax.swing.JTextField fjumlah;
    private javax.swing.JTextField fpajak;
    private javax.swing.JLabel fsubtotal;
    private javax.swing.JLabel fsubtotal1;
    private javax.swing.JTable ftbltransaksi;
    private javax.swing.JLabel ftotal;
    private javax.swing.JLabel ftotal1;
    private javax.swing.JLabel ftotal2;
    private javax.swing.JLabel historiTransaksiBtn;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel listBarangBtn;
    private javax.swing.JLabel listBarangBtnIcon;
    private javax.swing.JLabel logoTitleLabel;
    private javax.swing.JLabel logoutBtn;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JPanel mainContentPanel;
    private javax.swing.JLabel mainTitleLabel;
    private javax.swing.JPanel paymentPanel;
    private javax.swing.JLabel profileIcon;
    private javax.swing.JLabel profileNameLabel;
    private javax.swing.JLabel profileRoleLabel;
    private javax.swing.JLabel returnBarangBtn;
    private javax.swing.JLabel returnBarangBtnIcon;
    private javax.swing.JLabel returnBarangIcon;
    private javax.swing.JPanel sideBarPanel;
    private javax.swing.JLabel transaksiBtn;
    private javax.swing.JLabel transaksiBtnIcon;
    // End of variables declaration//GEN-END:variables
}

